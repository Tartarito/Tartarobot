#define REMOTEXY_MODE__WIFI_POINT

#include <ESP8266WiFi.h>

// RemoteXY connection settings 
#define REMOTEXY_WIFI_SSID "MINIBOT"
#define REMOTEXY_WIFI_PASSWORD "12345678"
#define REMOTEXY_SERVER_PORT 6377



#include <RemoteXY.h>
// RemoteXY GUI configuration  
#pragma pack(push, 1)  
uint8_t RemoteXY_CONF[] =   // 76 bytes
  { 255,4,0,0,0,69,0,19,0,0,0,0,31,2,106,200,200,84,1,1,
  3,0,5,203,31,143,143,18,12,60,60,32,2,26,31,1,56,67,57,57,
  144,25,24,24,0,2,31,68,101,109,97,99,105,97,0,2,44,251,23,52,
  97,3,17,9,0,2,26,31,31,79,78,0,79,70,70,0 };
  
// this structure defines all the variables and events of your control interface 
struct {

    // input variables
  int8_t slider_01; // from 0 to 100
  int8_t joystick_01_x; // from -100 to 100
  int8_t joystick_01_y; // from -100 to 100
  uint8_t button_01; // =1 if button pressed, else =0
  uint8_t switch_01; // =1 if switch ON and =0 if OFF
    // other variable
  uint8_t connect_flag;  // =1 if wire connected, else =0

} RemoteXY;   
#pragma pack(pop)
 /* defined the right motor control pins */
#define PIN_MOTOR_RIGHT_UP 14
#define PIN_MOTOR_RIGHT_DN 12
#define PIN_MOTOR_RIGHT_SPEED 15

/* defined the left motor control pins */
#define PIN_MOTOR_LEFT_UP 4
#define PIN_MOTOR_LEFT_DN 5
#define PIN_MOTOR_LEFT_SPEED 13

/* defined the LED pin */
#define PIN_LED 2

/* defined two arrays with a list of pins for each motor */
unsigned char RightMotor[3] = 
  {PIN_MOTOR_RIGHT_UP, PIN_MOTOR_RIGHT_DN, PIN_MOTOR_RIGHT_SPEED};
unsigned char LeftMotor[3] = 
  {PIN_MOTOR_LEFT_UP, PIN_MOTOR_LEFT_DN, PIN_MOTOR_LEFT_SPEED};

void Wheel (unsigned char * motor, int v)
{
  if (v>100) v=100;
  if (v<-100) v=-100;
  if (v>0) {
    digitalWrite(motor[0], HIGH);
    digitalWrite(motor[1], LOW);
    analogWrite(motor[2], v*2.55);
  }
  else if (v<0) {
    digitalWrite(motor[0], LOW);
    digitalWrite(motor[1], HIGH);
    analogWrite(motor[2], (-v)*2.55);
  }
  else {
    digitalWrite(motor[0], LOW);
    digitalWrite(motor[1], LOW);
    analogWrite(motor[2], 0);
  }
}
/////////////////////////////////////////////
//           END RemoteXY include          //
/////////////////////////////////////////////



void setup() 
{
  RemoteXY_Init (); 
  pinMode (PIN_MOTOR_RIGHT_UP, OUTPUT);
  pinMode (PIN_MOTOR_RIGHT_DN, OUTPUT);
  pinMode (PIN_MOTOR_LEFT_UP, OUTPUT);
  pinMode (PIN_MOTOR_LEFT_DN, OUTPUT);
  pinMode (PIN_LED, OUTPUT);
  
  // TODO you setup code
  
}
void turnRight() {
  // Define the behavior of turning right. This could involve running the motors at a specific speed.
  // Let's assume we want to make the robot rotate to the right by moving the right motor backward and left motor forward.
  
  // Right motor backward and left motor forward for right turn
  Wheel(RightMotor, -50);  // Right motor backward at half speed
  Wheel(LeftMotor, 50);    // Left motor forward at half speed
}
void loop() 
{ 
  RemoteXY_Handler ();
  if (RemoteXY.button_01 == 1) {
    // If button is pressed, make the device turn right
    turnRight();

}  
  
  /* manage LED pin */
  digitalWrite (PIN_LED, (RemoteXY.switch_01==0)?HIGH:LOW);

  /* manage the right motor */
  Wheel (RightMotor, ((-1) * RemoteXY.joystick_01_y) - RemoteXY.joystick_01_x);
  /* manage the left motor */
  Wheel (LeftMotor, ((-1) * RemoteXY.joystick_01_y) + RemoteXY.joystick_01_x);
}
  // TODO you loop code
  // use the RemoteXY structure for data transfer
  // do not call delay(), use instead RemoteXY_delay() 
  // Check if the button is pressed
