#define REMOTEXY_MODE__WIFI_POINT

#include <ESP8266WiFi.h>

// RemoteXY connection settings 
#define REMOTEXY_WIFI_SSID "tartarogaming"
#define REMOTEXY_WIFI_PASSWORD "12345678"
#define REMOTEXY_SERVER_PORT 6377
#define REMOTEXY_ACCESS_PASSWORD "toilet123"


#include <RemoteXY.h>
// RemoteXY GUI configuration  
#pragma pack(push, 1)  
uint8_t RemoteXY_CONF[] =   // 173 bytes
  { 255,4,0,0,0,166,0,19,0,0,0,0,28,1,200,84,1,1,13,0,
  130,141,13,17,65,9,29,129,147,17,6,4,64,26,240,159,148,186,0,129,
  147,71,6,4,64,26,240,159,148,187,0,130,17,15,59,59,9,29,10,181,
  6,14,14,48,4,26,31,79,78,0,31,79,70,70,0,4,143,15,13,60,
  0,37,26,5,19,17,55,55,32,36,26,31,129,181,3,14,3,64,26,84,
  101,115,116,32,76,105,103,104,116,0,129,6,39,11,12,64,26,226,151,128,
  0,129,76,38,11,12,64,26,226,150,182,0,129,41,5,12,12,64,26,226,
  150,178,0,129,41,74,12,12,64,26,226,150,188,0,129,139,8,22,4,64,
  26,74,97,119,32,67,111,110,116,114,111,108,0 };
  
// this structure defines all the variables and events of your control interface 
struct {

    // input variables
  uint8_t pushSwitch_01; // =1 if state is ON, else =0
  int8_t slider_01; // from 0 to 100
  int8_t joystick_01_x; // from -100 to 100
  int8_t joystick_01_y; // from -100 to 100

    // other variable
  uint8_t connect_flag;  // =1 if wire connected, else =0

} RemoteXY;   
#pragma pack(pop)
 /* defined the right motor control pins */
#define PIN_MOTOR_RIGHT_UP 14
#define PIN_MOTOR_RIGHT_DN 12
#define PIN_MOTOR_RIGHT_SPEED 15

/* defined the left motor control pins */
#define PIN_MOTOR_LEFT_UP 4
#define PIN_MOTOR_LEFT_DN 5
#define PIN_MOTOR_LEFT_SPEED 13
#include <Servo.h>
Servo myServo;
int servoPin = D3;  // Pin para el primer servo
/* defined the LED pin */

/* defined two arrays with a list of pins for each motor */
unsigned char RightMotor[3] = 
  {PIN_MOTOR_RIGHT_UP, PIN_MOTOR_RIGHT_DN, PIN_MOTOR_RIGHT_SPEED};
unsigned char LeftMotor[3] = 
  {PIN_MOTOR_LEFT_UP, PIN_MOTOR_LEFT_DN, PIN_MOTOR_LEFT_SPEED};

void Wheel (unsigned char * motor, int v)
{
  if (v>100) v=100;
  if (v<-100) v=-100;
  if (v>0) {
    digitalWrite(motor[0], HIGH);
    digitalWrite(motor[1], LOW);
    analogWrite(motor[2], v*2.55);
  }
  else if (v<0) {
    digitalWrite(motor[0], LOW);
    digitalWrite(motor[1], HIGH);
    analogWrite(motor[2], (-v)*2.55);
  }
  else {
    digitalWrite(motor[0], LOW);
    digitalWrite(motor[1], LOW);
    analogWrite(motor[2], 0);
  }
}
/////////////////////////////////////////////
//           END RemoteXY include          //
/////////////////////////////////////////////



void setup() 
{
  RemoteXY_Init (); 
  pinMode (PIN_MOTOR_RIGHT_UP, OUTPUT);
  pinMode (PIN_MOTOR_RIGHT_DN, OUTPUT);
  pinMode (PIN_MOTOR_LEFT_UP, OUTPUT);
  pinMode (PIN_MOTOR_LEFT_DN, OUTPUT);
  myServo.attach(servoPin); // Conectar el primer servo al pin D2
  // TODO you setup code
  
}

void loop() 
{ 
  RemoteXY_Handler ();
  
  
  /* manage LED pin */
  /* manage the right motor */
  Wheel (RightMotor, ((1) * RemoteXY.joystick_01_y) - RemoteXY.joystick_01_x);
  /* manage the left motor */
  Wheel (LeftMotor, ((-1) * RemoteXY.joystick_01_y) + RemoteXY.joystick_01_x);
  // TODO you loop code
  // use the RemoteXY structure for data transfer
  // do not call delay(), use instead RemoteXY_delay() 
  //AGREGADO SERVO
  // Controlar ambos servos con el valor del slider (-100 a 100)
  int sliderValue = ((RemoteXY.slider_01)* (1.45));  // Obtener el valor del slider (-100 a 100)

  // Mapea el valor del slider (-100 a 100) al rango (0 a 180) para el primer servo

  // Mueve el primer servomotor a la posiciÃ³n deseada
  myServo.write(sliderValue);

}
